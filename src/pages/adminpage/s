import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { FaSearch, FaPlus, FaEdit, FaTrash } from 'react-icons/fa';

const ProductManagement = () => {
  const [products, setProducts] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [sortOrder, setSortOrder] = useState('');

  // Function to fetch products from the backend
  const fetchProducts = async (sortOrder = '') => {
    try {
      const response = await axios.get('/api/products', {
        params: { sortOrder },
      });
      setProducts(response.data);
    } catch (error) {
      console.error('Error fetching products:', error);
    }
  };

  // Fetch products on component mount and when sortOrder changes
  useEffect(() => {
    fetchProducts(sortOrder);
  }, [sortOrder]);

  // Handle search functionality (optional)
  const handleSearch = async () => {
    // Implement search logic here, e.g., fetching based on searchTerm
    // For example: const response = await axios.get('/api/products/search', { params: { name: searchTerm } });
  };

  return (
    <div className="flex flex-col lg:flex-row h-screen bg-gray-100">
      {/* Left Sidebar for Sorting */}
      <div className="w-full lg:w-1/4 p-6 bg-white shadow-md rounded-lg">
        <h1 className="text-2xl font-bold mb-4">Product Management</h1>
        
        {/* Sort Options */}
        <div className="mb-6">
          <label className="block text-gray-700 font-semibold mb-2">Sort By:</label>
          <select
            value={sortOrder}
            onChange={(e) => setSortOrder(e.target.value)}
            className="w-full p-2 border rounded bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="">Select Sorting</option>
            <option value="priceLowToHigh">Price: Low to High</option>
            <option value="priceHighToLow">Price: High to Low</option>
            <option value="nameAtoZ">Name: A to Z</option>
            <option value="nameZtoA">Name: Z to A</option>
          </select>
        </div>

        {/* Search Bar */}
        <div className="flex space-x-4 mb-4">
          <input
            type="text"
            placeholder="Search by name"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full p-2 border rounded"
          />
          <button
            onClick={handleSearch}
            className="bg-blue-600 text-white px-4 py-2 rounded flex items-center"
          >
            <FaSearch className="mr-2" /> Search
          </button>
        </div>

        {/* Add Product Button */}
        <button onClick={openModal} className="bg-blue-600 text-white px-4 py-2 rounded flex items-center mb-6">
          <FaPlus className="mr-2" /> Add Product
        </button>
      </div>

      {/* Right Side for Product Cards */}
      <div className="flex-1 p-6">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 p-8 bg-gray-50">
          {products.map((product) => (
            <div
              key={product._id}
              className="bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 p-4 relative transform hover:scale-105 mx-auto"
            >
              <div className="relative mb-4">
                <img
                  src={product.images.url}
                  alt={product.productName}
                  className="w-full h-48 object-cover rounded-lg mx-auto"
                />
                <div className="absolute top-2 right-2 bg-white px-4 py-1 rounded-full shadow-md text-base font-semibold text-gray-700">
                  â‚¹{product.price}
                </div>
              </div>
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-800 truncate">{product.name}</h3>
                <p className="text-sm text-gray-600 mt-1">Edition: {product.edition}</p>
                <p className="text-sm text-gray-600 mt-1">Category: {product.category}</p>
                <p className="text-sm text-gray-600 mt-1">Quantity: {product.quantity}</p>
                <div className="flex justify-center items-center mt-4 space-x-4">
                  <button
                    onClick={() => handleEditProduct(product)}
                    className="p-2 bg-yellow-200 rounded-full hover:bg-yellow-400 transition-colors duration-200 flex items-center"
                    aria-label="Edit"
                  >
                    <FaEdit className="text-yellow-600" size={18} />
                  </button>
                  <button
                    onClick={() => handleOpenDeleteModal(product)}
                    className="p-2 bg-red-200 rounded-full hover:bg-red-400 transition-colors duration-200 flex items-center"
                    aria-label="Delete"
                  >
                    <FaTrash className="text-red-600" size={18} />
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default ProductManagement;
